#!amber

SHADER compute kComputeShader HLSL
AppendStructuredBuffer<float> append_buf;
void main() {
  int sum = 0;
  for (int i = 0; i < 100; ++i)
    sum += i;
  append_buf.Append(sum);

  sum = 0;
  for (int i = 0; i < 100; ++i) {
    if (i > 50) break;
    sum += i;
  }
  append_buf.Append(sum);

  sum = 0;
  for (int i = 0; i < 100; ++i) {
    if (i % 3) continue;
    sum += i;
  }
  append_buf.Append(sum);

  for (int i = 33; i < 71; ++i) {
    sum += i;
  }
  append_buf.Append(sum);
}
END

BUFFER kAppendBuffer DATA_TYPE float SIZE 32 FILL 0
BUFFER kAppendBufferIndex DATA_TYPE uint32 SIZE 4 FILL 0

PIPELINE compute kComputePipeline
  ATTACH kComputeShader

  BIND BUFFER kAppendBuffer AS storage DESCRIPTOR_SET 0 BINDING 0
  BIND BUFFER kAppendBufferIndex AS storage DESCRIPTOR_SET 0 BINDING 1
END

RUN kComputePipeline 1 1 1

EXPECT kAppendBuffer IDX 0 TOLERANCE 0.01% EQ 4950 1275 1683 3640
